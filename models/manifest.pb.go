// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: models/proto/manifest.proto

package models

import (
	_struct "github.com/golang/protobuf/ptypes/struct"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskType int32

const (
	TaskType_TASK_TYPE_NATIVE      TaskType = 0
	TaskType_TASK_TYPE_HTTP_REMOTE TaskType = 1
	TaskType_TASK_TYPE_LOOP        TaskType = 2
	TaskType_TASK_TYPE_RETURN      TaskType = 3
	TaskType_TASK_TYPE_DELAY       TaskType = 4
	TaskType_TASK_TYPE_INPUT       TaskType = 5
	TaskType_TASK_TYPE_REMOTE      TaskType = 6
)

// Enum value maps for TaskType.
var (
	TaskType_name = map[int32]string{
		0: "TASK_TYPE_NATIVE",
		1: "TASK_TYPE_HTTP_REMOTE",
		2: "TASK_TYPE_LOOP",
		3: "TASK_TYPE_RETURN",
		4: "TASK_TYPE_DELAY",
		5: "TASK_TYPE_INPUT",
		6: "TASK_TYPE_REMOTE",
	}
	TaskType_value = map[string]int32{
		"TASK_TYPE_NATIVE":      0,
		"TASK_TYPE_HTTP_REMOTE": 1,
		"TASK_TYPE_LOOP":        2,
		"TASK_TYPE_RETURN":      3,
		"TASK_TYPE_DELAY":       4,
		"TASK_TYPE_INPUT":       5,
		"TASK_TYPE_REMOTE":      6,
	}
)

func (x TaskType) Enum() *TaskType {
	p := new(TaskType)
	*p = x
	return p
}

func (x TaskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_models_proto_manifest_proto_enumTypes[0].Descriptor()
}

func (TaskType) Type() protoreflect.EnumType {
	return &file_models_proto_manifest_proto_enumTypes[0]
}

func (x TaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskType.Descriptor instead.
func (TaskType) EnumDescriptor() ([]byte, []int) {
	return file_models_proto_manifest_proto_rawDescGZIP(), []int{0}
}

type WorkflowManifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version         string                     `protobuf:"bytes,10,opt,name=version,proto3" json:"version,omitempty"`
	ProjectId       string                     `protobuf:"bytes,8,opt,name=projectId,proto3" json:"projectId,omitempty"`
	WorkflowId      string                     `protobuf:"bytes,9,opt,name=workflowId,proto3" json:"workflowId,omitempty"`
	CreatedAt       *timestamp.Timestamp       `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	StartAt         string                     `protobuf:"bytes,4,opt,name=startAt,proto3" json:"startAt,omitempty"`
	States          map[string]*TaskDefinition `protobuf:"bytes,3,rep,name=states,proto3" json:"states,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	WaitForResponse bool                       `protobuf:"varint,7,opt,name=waitForResponse,proto3" json:"waitForResponse,omitempty"`
}

func (x *WorkflowManifest) Reset() {
	*x = WorkflowManifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_proto_manifest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowManifest) ProtoMessage() {}

func (x *WorkflowManifest) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_manifest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowManifest.ProtoReflect.Descriptor instead.
func (*WorkflowManifest) Descriptor() ([]byte, []int) {
	return file_models_proto_manifest_proto_rawDescGZIP(), []int{0}
}

func (x *WorkflowManifest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkflowManifest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *WorkflowManifest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *WorkflowManifest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *WorkflowManifest) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *WorkflowManifest) GetStartAt() string {
	if x != nil {
		return x.StartAt
	}
	return ""
}

func (x *WorkflowManifest) GetStates() map[string]*TaskDefinition {
	if x != nil {
		return x.States
	}
	return nil
}

func (x *WorkflowManifest) GetWaitForResponse() bool {
	if x != nil {
		return x.WaitForResponse
	}
	return false
}

type TaskDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DependsOn       []string                  `protobuf:"bytes,1,rep,name=dependsOn,proto3" json:"dependsOn,omitempty"`
	Dependants      []string                  `protobuf:"bytes,2,rep,name=dependants,proto3" json:"dependants,omitempty"`
	MaxRetries      int64                     `protobuf:"varint,3,opt,name=maxRetries,proto3" json:"maxRetries,omitempty"`
	Backoff         []int64                   `protobuf:"varint,4,rep,packed,name=backoff,proto3" json:"backoff,omitempty"`
	RetryableErrors []string                  `protobuf:"bytes,6,rep,name=retryableErrors,proto3" json:"retryableErrors,omitempty"`
	SecretBindings  []string                  `protobuf:"bytes,7,rep,name=secretBindings,proto3" json:"secretBindings,omitempty"`
	TaskType        TaskType                  `protobuf:"varint,8,opt,name=taskType,proto3,enum=TaskType" json:"taskType,omitempty"`
	TaskIdentifier  string                    `protobuf:"bytes,10,opt,name=taskIdentifier,proto3" json:"taskIdentifier,omitempty"`
	Config          map[string]*_struct.Value `protobuf:"bytes,11,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TaskDefinition) Reset() {
	*x = TaskDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_proto_manifest_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDefinition) ProtoMessage() {}

func (x *TaskDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_manifest_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDefinition.ProtoReflect.Descriptor instead.
func (*TaskDefinition) Descriptor() ([]byte, []int) {
	return file_models_proto_manifest_proto_rawDescGZIP(), []int{1}
}

func (x *TaskDefinition) GetDependsOn() []string {
	if x != nil {
		return x.DependsOn
	}
	return nil
}

func (x *TaskDefinition) GetDependants() []string {
	if x != nil {
		return x.Dependants
	}
	return nil
}

func (x *TaskDefinition) GetMaxRetries() int64 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *TaskDefinition) GetBackoff() []int64 {
	if x != nil {
		return x.Backoff
	}
	return nil
}

func (x *TaskDefinition) GetRetryableErrors() []string {
	if x != nil {
		return x.RetryableErrors
	}
	return nil
}

func (x *TaskDefinition) GetSecretBindings() []string {
	if x != nil {
		return x.SecretBindings
	}
	return nil
}

func (x *TaskDefinition) GetTaskType() TaskType {
	if x != nil {
		return x.TaskType
	}
	return TaskType_TASK_TYPE_NATIVE
}

func (x *TaskDefinition) GetTaskIdentifier() string {
	if x != nil {
		return x.TaskIdentifier
	}
	return ""
}

func (x *TaskDefinition) GetConfig() map[string]*_struct.Value {
	if x != nil {
		return x.Config
	}
	return nil
}

var File_models_proto_manifest_proto protoreflect.FileDescriptor

var file_models_proto_manifest_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfb, 0x02, 0x0a,
	0x10, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x35, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x77, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x77,
	0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x4a,
	0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb1, 0x03, 0x0a, 0x0e, 0x54,
	0x61, 0x73, 0x6b, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d,
	0x61, 0x78, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61,
	0x63, 0x6b, 0x6f, 0x66, 0x66, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x61, 0x62,
	0x6c, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f,
	0x72, 0x65, 0x74, 0x72, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12,
	0x26, 0x0a, 0x0e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x25, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x51, 0x0a, 0x0b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0xa5,
	0x01, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54,
	0x41, 0x53, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x41, 0x54, 0x49, 0x56, 0x45, 0x10,
	0x00, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48,
	0x54, 0x54, 0x50, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x54, 0x45, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e,
	0x54, 0x41, 0x53, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x4f, 0x4f, 0x50, 0x10, 0x02,
	0x12, 0x14, 0x0a, 0x10, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45,
	0x54, 0x55, 0x52, 0x4e, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x41, 0x59, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x54,
	0x41, 0x53, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x05,
	0x12, 0x14, 0x0a, 0x10, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45,
	0x4d, 0x4f, 0x54, 0x45, 0x10, 0x06, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2e, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_models_proto_manifest_proto_rawDescOnce sync.Once
	file_models_proto_manifest_proto_rawDescData = file_models_proto_manifest_proto_rawDesc
)

func file_models_proto_manifest_proto_rawDescGZIP() []byte {
	file_models_proto_manifest_proto_rawDescOnce.Do(func() {
		file_models_proto_manifest_proto_rawDescData = protoimpl.X.CompressGZIP(file_models_proto_manifest_proto_rawDescData)
	})
	return file_models_proto_manifest_proto_rawDescData
}

var file_models_proto_manifest_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_models_proto_manifest_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_models_proto_manifest_proto_goTypes = []any{
	(TaskType)(0),               // 0: TaskType
	(*WorkflowManifest)(nil),    // 1: WorkflowManifest
	(*TaskDefinition)(nil),      // 2: TaskDefinition
	nil,                         // 3: WorkflowManifest.StatesEntry
	nil,                         // 4: TaskDefinition.ConfigEntry
	(*timestamp.Timestamp)(nil), // 5: google.protobuf.Timestamp
	(*_struct.Value)(nil),       // 6: google.protobuf.Value
}
var file_models_proto_manifest_proto_depIdxs = []int32{
	5, // 0: WorkflowManifest.createdAt:type_name -> google.protobuf.Timestamp
	3, // 1: WorkflowManifest.states:type_name -> WorkflowManifest.StatesEntry
	0, // 2: TaskDefinition.taskType:type_name -> TaskType
	4, // 3: TaskDefinition.config:type_name -> TaskDefinition.ConfigEntry
	2, // 4: WorkflowManifest.StatesEntry.value:type_name -> TaskDefinition
	6, // 5: TaskDefinition.ConfigEntry.value:type_name -> google.protobuf.Value
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_models_proto_manifest_proto_init() }
func file_models_proto_manifest_proto_init() {
	if File_models_proto_manifest_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_models_proto_manifest_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*WorkflowManifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_proto_manifest_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TaskDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_models_proto_manifest_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_models_proto_manifest_proto_goTypes,
		DependencyIndexes: file_models_proto_manifest_proto_depIdxs,
		EnumInfos:         file_models_proto_manifest_proto_enumTypes,
		MessageInfos:      file_models_proto_manifest_proto_msgTypes,
	}.Build()
	File_models_proto_manifest_proto = out.File
	file_models_proto_manifest_proto_rawDesc = nil
	file_models_proto_manifest_proto_goTypes = nil
	file_models_proto_manifest_proto_depIdxs = nil
}
