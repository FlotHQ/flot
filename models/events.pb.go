// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: models/proto/events.proto

package models

import (
	_ "github.com/golang/protobuf/ptypes/struct"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogLevel int32

const (
	LogLevel_LOG_LEVEL_DEBUG LogLevel = 0
	LogLevel_LOG_LEVEL_INFO  LogLevel = 1
	LogLevel_LOG_LEVEL_WARN  LogLevel = 2
	LogLevel_LOG_LEVEL_ERROR LogLevel = 3
	LogLevel_LOG_LEVEL_FATAL LogLevel = 4
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "LOG_LEVEL_DEBUG",
		1: "LOG_LEVEL_INFO",
		2: "LOG_LEVEL_WARN",
		3: "LOG_LEVEL_ERROR",
		4: "LOG_LEVEL_FATAL",
	}
	LogLevel_value = map[string]int32{
		"LOG_LEVEL_DEBUG": 0,
		"LOG_LEVEL_INFO":  1,
		"LOG_LEVEL_WARN":  2,
		"LOG_LEVEL_ERROR": 3,
		"LOG_LEVEL_FATAL": 4,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

func (x LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_models_proto_events_proto_enumTypes[0].Descriptor()
}

func (LogLevel) Type() protoreflect.EnumType {
	return &file_models_proto_events_proto_enumTypes[0]
}

func (x LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogLevel.Descriptor instead.
func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_models_proto_events_proto_rawDescGZIP(), []int{0}
}

type WorkflowEventType int32

const (
	WorkflowEventType_WORKFLOW_EVENT_TYPE_PENDING   WorkflowEventType = 0
	WorkflowEventType_WORKFLOW_EVENT_TYPE_STARTED   WorkflowEventType = 1
	WorkflowEventType_WORKFLOW_EVENT_TYPE_COMPLETED WorkflowEventType = 2
	WorkflowEventType_WORKFLOW_EVENT_TYPE_FAILED    WorkflowEventType = 3
)

// Enum value maps for WorkflowEventType.
var (
	WorkflowEventType_name = map[int32]string{
		0: "WORKFLOW_EVENT_TYPE_PENDING",
		1: "WORKFLOW_EVENT_TYPE_STARTED",
		2: "WORKFLOW_EVENT_TYPE_COMPLETED",
		3: "WORKFLOW_EVENT_TYPE_FAILED",
	}
	WorkflowEventType_value = map[string]int32{
		"WORKFLOW_EVENT_TYPE_PENDING":   0,
		"WORKFLOW_EVENT_TYPE_STARTED":   1,
		"WORKFLOW_EVENT_TYPE_COMPLETED": 2,
		"WORKFLOW_EVENT_TYPE_FAILED":    3,
	}
)

func (x WorkflowEventType) Enum() *WorkflowEventType {
	p := new(WorkflowEventType)
	*p = x
	return p
}

func (x WorkflowEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkflowEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_models_proto_events_proto_enumTypes[1].Descriptor()
}

func (WorkflowEventType) Type() protoreflect.EnumType {
	return &file_models_proto_events_proto_enumTypes[1]
}

func (x WorkflowEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkflowEventType.Descriptor instead.
func (WorkflowEventType) EnumDescriptor() ([]byte, []int) {
	return file_models_proto_events_proto_rawDescGZIP(), []int{1}
}

type TaskEventType int32

const (
	TaskEventType_TASK_EVENT_TYPE_STARTED   TaskEventType = 0
	TaskEventType_TASK_EVENT_TYPE_COMPLETED TaskEventType = 1
	TaskEventType_TASK_EVENT_TYPE_FAILED    TaskEventType = 2
	TaskEventType_TASK_EVENT_TYPE_PENDING   TaskEventType = 3
	TaskEventType_TASK_EVENT_TYPE_BLOCKED   TaskEventType = 4
)

// Enum value maps for TaskEventType.
var (
	TaskEventType_name = map[int32]string{
		0: "TASK_EVENT_TYPE_STARTED",
		1: "TASK_EVENT_TYPE_COMPLETED",
		2: "TASK_EVENT_TYPE_FAILED",
		3: "TASK_EVENT_TYPE_PENDING",
		4: "TASK_EVENT_TYPE_BLOCKED",
	}
	TaskEventType_value = map[string]int32{
		"TASK_EVENT_TYPE_STARTED":   0,
		"TASK_EVENT_TYPE_COMPLETED": 1,
		"TASK_EVENT_TYPE_FAILED":    2,
		"TASK_EVENT_TYPE_PENDING":   3,
		"TASK_EVENT_TYPE_BLOCKED":   4,
	}
)

func (x TaskEventType) Enum() *TaskEventType {
	p := new(TaskEventType)
	*p = x
	return p
}

func (x TaskEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_models_proto_events_proto_enumTypes[2].Descriptor()
}

func (TaskEventType) Type() protoreflect.EnumType {
	return &file_models_proto_events_proto_enumTypes[2]
}

func (x TaskEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskEventType.Descriptor instead.
func (TaskEventType) EnumDescriptor() ([]byte, []int) {
	return file_models_proto_events_proto_rawDescGZIP(), []int{2}
}

type ErrorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_proto_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMessage.ProtoReflect.Descriptor instead.
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return file_models_proto_events_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorMessage) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type LogMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level   LogLevel `protobuf:"varint,1,opt,name=level,proto3,enum=LogLevel" json:"level,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *LogMessage) Reset() {
	*x = LogMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_proto_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogMessage) ProtoMessage() {}

func (x *LogMessage) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogMessage.ProtoReflect.Descriptor instead.
func (*LogMessage) Descriptor() ([]byte, []int) {
	return file_models_proto_events_proto_rawDescGZIP(), []int{1}
}

func (x *LogMessage) GetLevel() LogLevel {
	if x != nil {
		return x.Level
	}
	return LogLevel_LOG_LEVEL_DEBUG
}

func (x *LogMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type WorkflowPendingEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WorkflowPendingEvent) Reset() {
	*x = WorkflowPendingEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_proto_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowPendingEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowPendingEvent) ProtoMessage() {}

func (x *WorkflowPendingEvent) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowPendingEvent.ProtoReflect.Descriptor instead.
func (*WorkflowPendingEvent) Descriptor() ([]byte, []int) {
	return file_models_proto_events_proto_rawDescGZIP(), []int{2}
}

type WorkflowStartedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartAt int64 `protobuf:"varint,2,opt,name=startAt,proto3" json:"startAt,omitempty"`
}

func (x *WorkflowStartedEvent) Reset() {
	*x = WorkflowStartedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_proto_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowStartedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowStartedEvent) ProtoMessage() {}

func (x *WorkflowStartedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowStartedEvent.ProtoReflect.Descriptor instead.
func (*WorkflowStartedEvent) Descriptor() ([]byte, []int) {
	return file_models_proto_events_proto_rawDescGZIP(), []int{3}
}

func (x *WorkflowStartedEvent) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

type WorkflowCompletedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowId string `protobuf:"bytes,1,opt,name=workflowId,proto3" json:"workflowId,omitempty"`
	Duration   int64  `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *WorkflowCompletedEvent) Reset() {
	*x = WorkflowCompletedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_proto_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowCompletedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowCompletedEvent) ProtoMessage() {}

func (x *WorkflowCompletedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowCompletedEvent.ProtoReflect.Descriptor instead.
func (*WorkflowCompletedEvent) Descriptor() ([]byte, []int) {
	return file_models_proto_events_proto_rawDescGZIP(), []int{4}
}

func (x *WorkflowCompletedEvent) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *WorkflowCompletedEvent) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type WorkflowFailedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *ErrorMessage `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *WorkflowFailedEvent) Reset() {
	*x = WorkflowFailedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_proto_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowFailedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowFailedEvent) ProtoMessage() {}

func (x *WorkflowFailedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowFailedEvent.ProtoReflect.Descriptor instead.
func (*WorkflowFailedEvent) Descriptor() ([]byte, []int) {
	return file_models_proto_events_proto_rawDescGZIP(), []int{5}
}

func (x *WorkflowFailedEvent) GetError() *ErrorMessage {
	if x != nil {
		return x.Error
	}
	return nil
}

type WorkflowEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        WorkflowEventType `protobuf:"varint,1,opt,name=type,proto3,enum=WorkflowEventType" json:"type,omitempty"`
	ExecutionId string            `protobuf:"bytes,7,opt,name=executionId,proto3" json:"executionId,omitempty"`
	ManifestId  string            `protobuf:"bytes,8,opt,name=manifestId,proto3" json:"manifestId,omitempty"`
	ProjectId   string            `protobuf:"bytes,9,opt,name=projectId,proto3" json:"projectId,omitempty"`
	WorkflowId  string            `protobuf:"bytes,10,opt,name=workflowId,proto3" json:"workflowId,omitempty"`
	// Types that are assignable to Event:
	//
	//	*WorkflowEvent_Started
	//	*WorkflowEvent_Completed
	//	*WorkflowEvent_Failed
	//	*WorkflowEvent_Pending
	Event isWorkflowEvent_Event `protobuf_oneof:"event"`
}

func (x *WorkflowEvent) Reset() {
	*x = WorkflowEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_proto_events_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowEvent) ProtoMessage() {}

func (x *WorkflowEvent) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_events_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowEvent.ProtoReflect.Descriptor instead.
func (*WorkflowEvent) Descriptor() ([]byte, []int) {
	return file_models_proto_events_proto_rawDescGZIP(), []int{6}
}

func (x *WorkflowEvent) GetType() WorkflowEventType {
	if x != nil {
		return x.Type
	}
	return WorkflowEventType_WORKFLOW_EVENT_TYPE_PENDING
}

func (x *WorkflowEvent) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *WorkflowEvent) GetManifestId() string {
	if x != nil {
		return x.ManifestId
	}
	return ""
}

func (x *WorkflowEvent) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *WorkflowEvent) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (m *WorkflowEvent) GetEvent() isWorkflowEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *WorkflowEvent) GetStarted() *WorkflowStartedEvent {
	if x, ok := x.GetEvent().(*WorkflowEvent_Started); ok {
		return x.Started
	}
	return nil
}

func (x *WorkflowEvent) GetCompleted() *WorkflowCompletedEvent {
	if x, ok := x.GetEvent().(*WorkflowEvent_Completed); ok {
		return x.Completed
	}
	return nil
}

func (x *WorkflowEvent) GetFailed() *WorkflowFailedEvent {
	if x, ok := x.GetEvent().(*WorkflowEvent_Failed); ok {
		return x.Failed
	}
	return nil
}

func (x *WorkflowEvent) GetPending() *WorkflowPendingEvent {
	if x, ok := x.GetEvent().(*WorkflowEvent_Pending); ok {
		return x.Pending
	}
	return nil
}

type isWorkflowEvent_Event interface {
	isWorkflowEvent_Event()
}

type WorkflowEvent_Started struct {
	Started *WorkflowStartedEvent `protobuf:"bytes,3,opt,name=started,proto3,oneof"`
}

type WorkflowEvent_Completed struct {
	Completed *WorkflowCompletedEvent `protobuf:"bytes,4,opt,name=completed,proto3,oneof"`
}

type WorkflowEvent_Failed struct {
	Failed *WorkflowFailedEvent `protobuf:"bytes,5,opt,name=failed,proto3,oneof"`
}

type WorkflowEvent_Pending struct {
	Pending *WorkflowPendingEvent `protobuf:"bytes,6,opt,name=pending,proto3,oneof"`
}

func (*WorkflowEvent_Started) isWorkflowEvent_Event() {}

func (*WorkflowEvent_Completed) isWorkflowEvent_Event() {}

func (*WorkflowEvent_Failed) isWorkflowEvent_Event() {}

func (*WorkflowEvent_Pending) isWorkflowEvent_Event() {}

type TaskPendingEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskPendingEvent) Reset() {
	*x = TaskPendingEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_proto_events_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskPendingEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskPendingEvent) ProtoMessage() {}

func (x *TaskPendingEvent) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_events_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskPendingEvent.ProtoReflect.Descriptor instead.
func (*TaskPendingEvent) Descriptor() ([]byte, []int) {
	return file_models_proto_events_proto_rawDescGZIP(), []int{7}
}

type TaskStartedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskStartedEvent) Reset() {
	*x = TaskStartedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_proto_events_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskStartedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStartedEvent) ProtoMessage() {}

func (x *TaskStartedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_events_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStartedEvent.ProtoReflect.Descriptor instead.
func (*TaskStartedEvent) Descriptor() ([]byte, []int) {
	return file_models_proto_events_proto_rawDescGZIP(), []int{8}
}

type TaskCompletedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskCompletedEvent) Reset() {
	*x = TaskCompletedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_proto_events_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskCompletedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCompletedEvent) ProtoMessage() {}

func (x *TaskCompletedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_events_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCompletedEvent.ProtoReflect.Descriptor instead.
func (*TaskCompletedEvent) Descriptor() ([]byte, []int) {
	return file_models_proto_events_proto_rawDescGZIP(), []int{9}
}

type TaskFailedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *ErrorMessage `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *TaskFailedEvent) Reset() {
	*x = TaskFailedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_proto_events_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskFailedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskFailedEvent) ProtoMessage() {}

func (x *TaskFailedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_events_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskFailedEvent.ProtoReflect.Descriptor instead.
func (*TaskFailedEvent) Descriptor() ([]byte, []int) {
	return file_models_proto_events_proto_rawDescGZIP(), []int{10}
}

func (x *TaskFailedEvent) GetError() *ErrorMessage {
	if x != nil {
		return x.Error
	}
	return nil
}

type TaskBlockedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskBlockedEvent) Reset() {
	*x = TaskBlockedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_proto_events_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskBlockedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskBlockedEvent) ProtoMessage() {}

func (x *TaskBlockedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_events_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskBlockedEvent.ProtoReflect.Descriptor instead.
func (*TaskBlockedEvent) Descriptor() ([]byte, []int) {
	return file_models_proto_events_proto_rawDescGZIP(), []int{11}
}

type TaskEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        TaskEventType `protobuf:"varint,6,opt,name=type,proto3,enum=TaskEventType" json:"type,omitempty"`
	TaskId      string        `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	ExecutionId string        `protobuf:"bytes,8,opt,name=executionId,proto3" json:"executionId,omitempty"`
	ManifestId  string        `protobuf:"bytes,9,opt,name=manifestId,proto3" json:"manifestId,omitempty"`
	ProjectId   string        `protobuf:"bytes,12,opt,name=projectId,proto3" json:"projectId,omitempty"`
	WorkflowId  string        `protobuf:"bytes,13,opt,name=workflowId,proto3" json:"workflowId,omitempty"`
	Retries     int64         `protobuf:"varint,10,opt,name=retries,proto3" json:"retries,omitempty"`
	// Types that are assignable to Event:
	//
	//	*TaskEvent_Started
	//	*TaskEvent_Completed
	//	*TaskEvent_Failed
	//	*TaskEvent_Pending
	//	*TaskEvent_Blocked
	Event isTaskEvent_Event `protobuf_oneof:"event"`
}

func (x *TaskEvent) Reset() {
	*x = TaskEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_proto_events_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskEvent) ProtoMessage() {}

func (x *TaskEvent) ProtoReflect() protoreflect.Message {
	mi := &file_models_proto_events_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskEvent.ProtoReflect.Descriptor instead.
func (*TaskEvent) Descriptor() ([]byte, []int) {
	return file_models_proto_events_proto_rawDescGZIP(), []int{12}
}

func (x *TaskEvent) GetType() TaskEventType {
	if x != nil {
		return x.Type
	}
	return TaskEventType_TASK_EVENT_TYPE_STARTED
}

func (x *TaskEvent) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskEvent) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *TaskEvent) GetManifestId() string {
	if x != nil {
		return x.ManifestId
	}
	return ""
}

func (x *TaskEvent) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *TaskEvent) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *TaskEvent) GetRetries() int64 {
	if x != nil {
		return x.Retries
	}
	return 0
}

func (m *TaskEvent) GetEvent() isTaskEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *TaskEvent) GetStarted() *TaskStartedEvent {
	if x, ok := x.GetEvent().(*TaskEvent_Started); ok {
		return x.Started
	}
	return nil
}

func (x *TaskEvent) GetCompleted() *TaskCompletedEvent {
	if x, ok := x.GetEvent().(*TaskEvent_Completed); ok {
		return x.Completed
	}
	return nil
}

func (x *TaskEvent) GetFailed() *TaskFailedEvent {
	if x, ok := x.GetEvent().(*TaskEvent_Failed); ok {
		return x.Failed
	}
	return nil
}

func (x *TaskEvent) GetPending() *TaskPendingEvent {
	if x, ok := x.GetEvent().(*TaskEvent_Pending); ok {
		return x.Pending
	}
	return nil
}

func (x *TaskEvent) GetBlocked() *TaskBlockedEvent {
	if x, ok := x.GetEvent().(*TaskEvent_Blocked); ok {
		return x.Blocked
	}
	return nil
}

type isTaskEvent_Event interface {
	isTaskEvent_Event()
}

type TaskEvent_Started struct {
	Started *TaskStartedEvent `protobuf:"bytes,3,opt,name=started,proto3,oneof"`
}

type TaskEvent_Completed struct {
	Completed *TaskCompletedEvent `protobuf:"bytes,4,opt,name=completed,proto3,oneof"`
}

type TaskEvent_Failed struct {
	Failed *TaskFailedEvent `protobuf:"bytes,5,opt,name=failed,proto3,oneof"`
}

type TaskEvent_Pending struct {
	Pending *TaskPendingEvent `protobuf:"bytes,7,opt,name=pending,proto3,oneof"`
}

type TaskEvent_Blocked struct {
	Blocked *TaskBlockedEvent `protobuf:"bytes,11,opt,name=blocked,proto3,oneof"`
}

func (*TaskEvent_Started) isTaskEvent_Event() {}

func (*TaskEvent_Completed) isTaskEvent_Event() {}

func (*TaskEvent_Failed) isTaskEvent_Event() {}

func (*TaskEvent_Pending) isTaskEvent_Event() {}

func (*TaskEvent_Blocked) isTaskEvent_Event() {}

var File_models_proto_events_proto protoreflect.FileDescriptor

var file_models_proto_events_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65,
	0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3c, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x47, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x09, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x16, 0x0a,
	0x14, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x30, 0x0a, 0x14, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x22, 0x54, 0x0a, 0x16, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x0a,
	0x13, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x8f, 0x03, 0x0a, 0x0d, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x6e, 0x69, 0x66,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x2e, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12,
	0x31, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x54,
	0x61, 0x73, 0x6b, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22,
	0x12, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x36, 0x0a, 0x0f, 0x54, 0x61, 0x73,
	0x6b, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x12, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xd8, 0x03, 0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0e, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a,
	0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x70, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2d, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2a, 0x71, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x13, 0x0a, 0x0f,
	0x4c, 0x4f, 0x47, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x4f, 0x47, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x49,
	0x4e, 0x46, 0x4f, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x4f, 0x47, 0x5f, 0x4c, 0x45, 0x56,
	0x45, 0x4c, 0x5f, 0x57, 0x41, 0x52, 0x4e, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x4f, 0x47,
	0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x13,
	0x0a, 0x0f, 0x4c, 0x4f, 0x47, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x46, 0x41, 0x54, 0x41,
	0x4c, 0x10, 0x04, 0x2a, 0x98, 0x01, 0x0a, 0x11, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x57, 0x4f, 0x52,
	0x4b, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x57, 0x4f,
	0x52, 0x4b, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x57,
	0x4f, 0x52, 0x4b, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1e,
	0x0a, 0x1a, 0x57, 0x4f, 0x52, 0x4b, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x2a, 0xa1,
	0x01, 0x0a, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x17, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a,
	0x19, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16,
	0x54, 0x41, 0x53, 0x4b, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x41, 0x53, 0x4b,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x45, 0x4e, 0x44,
	0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44,
	0x10, 0x04, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_models_proto_events_proto_rawDescOnce sync.Once
	file_models_proto_events_proto_rawDescData = file_models_proto_events_proto_rawDesc
)

func file_models_proto_events_proto_rawDescGZIP() []byte {
	file_models_proto_events_proto_rawDescOnce.Do(func() {
		file_models_proto_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_models_proto_events_proto_rawDescData)
	})
	return file_models_proto_events_proto_rawDescData
}

var file_models_proto_events_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_models_proto_events_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_models_proto_events_proto_goTypes = []any{
	(LogLevel)(0),                  // 0: LogLevel
	(WorkflowEventType)(0),         // 1: WorkflowEventType
	(TaskEventType)(0),             // 2: TaskEventType
	(*ErrorMessage)(nil),           // 3: ErrorMessage
	(*LogMessage)(nil),             // 4: LogMessage
	(*WorkflowPendingEvent)(nil),   // 5: WorkflowPendingEvent
	(*WorkflowStartedEvent)(nil),   // 6: WorkflowStartedEvent
	(*WorkflowCompletedEvent)(nil), // 7: WorkflowCompletedEvent
	(*WorkflowFailedEvent)(nil),    // 8: WorkflowFailedEvent
	(*WorkflowEvent)(nil),          // 9: WorkflowEvent
	(*TaskPendingEvent)(nil),       // 10: TaskPendingEvent
	(*TaskStartedEvent)(nil),       // 11: TaskStartedEvent
	(*TaskCompletedEvent)(nil),     // 12: TaskCompletedEvent
	(*TaskFailedEvent)(nil),        // 13: TaskFailedEvent
	(*TaskBlockedEvent)(nil),       // 14: TaskBlockedEvent
	(*TaskEvent)(nil),              // 15: TaskEvent
}
var file_models_proto_events_proto_depIdxs = []int32{
	0,  // 0: LogMessage.level:type_name -> LogLevel
	3,  // 1: WorkflowFailedEvent.error:type_name -> ErrorMessage
	1,  // 2: WorkflowEvent.type:type_name -> WorkflowEventType
	6,  // 3: WorkflowEvent.started:type_name -> WorkflowStartedEvent
	7,  // 4: WorkflowEvent.completed:type_name -> WorkflowCompletedEvent
	8,  // 5: WorkflowEvent.failed:type_name -> WorkflowFailedEvent
	5,  // 6: WorkflowEvent.pending:type_name -> WorkflowPendingEvent
	3,  // 7: TaskFailedEvent.error:type_name -> ErrorMessage
	2,  // 8: TaskEvent.type:type_name -> TaskEventType
	11, // 9: TaskEvent.started:type_name -> TaskStartedEvent
	12, // 10: TaskEvent.completed:type_name -> TaskCompletedEvent
	13, // 11: TaskEvent.failed:type_name -> TaskFailedEvent
	10, // 12: TaskEvent.pending:type_name -> TaskPendingEvent
	14, // 13: TaskEvent.blocked:type_name -> TaskBlockedEvent
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_models_proto_events_proto_init() }
func file_models_proto_events_proto_init() {
	if File_models_proto_events_proto != nil {
		return
	}
	file_models_proto_manifest_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_models_proto_events_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ErrorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_proto_events_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*LogMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_proto_events_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*WorkflowPendingEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_proto_events_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*WorkflowStartedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_proto_events_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*WorkflowCompletedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_proto_events_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*WorkflowFailedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_proto_events_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*WorkflowEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_proto_events_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*TaskPendingEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_proto_events_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*TaskStartedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_proto_events_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*TaskCompletedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_proto_events_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*TaskFailedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_proto_events_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*TaskBlockedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_models_proto_events_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*TaskEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_models_proto_events_proto_msgTypes[6].OneofWrappers = []any{
		(*WorkflowEvent_Started)(nil),
		(*WorkflowEvent_Completed)(nil),
		(*WorkflowEvent_Failed)(nil),
		(*WorkflowEvent_Pending)(nil),
	}
	file_models_proto_events_proto_msgTypes[12].OneofWrappers = []any{
		(*TaskEvent_Started)(nil),
		(*TaskEvent_Completed)(nil),
		(*TaskEvent_Failed)(nil),
		(*TaskEvent_Pending)(nil),
		(*TaskEvent_Blocked)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_models_proto_events_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_models_proto_events_proto_goTypes,
		DependencyIndexes: file_models_proto_events_proto_depIdxs,
		EnumInfos:         file_models_proto_events_proto_enumTypes,
		MessageInfos:      file_models_proto_events_proto_msgTypes,
	}.Build()
	File_models_proto_events_proto = out.File
	file_models_proto_events_proto_rawDesc = nil
	file_models_proto_events_proto_goTypes = nil
	file_models_proto_events_proto_depIdxs = nil
}
